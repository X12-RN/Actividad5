name: Build, Test, and Analyze Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ gcc gcovr

      - name: Configure Build System
        run: |
          mkdir build
          cd build
          cmake .. -DENABLE_TESTING=ON -DENABLE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug

      - name: Build Project
        run: |
          cd build
          make

      - name: Run Unit Tests
        run: |
          cd build
          ./unit_tests

      - name: Generate Coverage Report
        run: |
          cd build
          gcovr -r .. --xml -o coverage.xml --exclude ../test --exclude ../main.cpp --exclude ../build --gcov-exclude '.*gtest.*' --gcov-exclude '.*CMakeFiles.*'

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: build/coverage.xml

  sonar-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download Coverage Report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: build/

      - name: Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v3
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.projectName=${{ secrets.SONAR_PROJECT_NAME }}
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.cfamily.gcov.reportsPath=build
            -Dsonar.coverageReportPaths=build/coverage.xml
            -Dsonar.cfamily.compile-commands=build/compile_commands.json